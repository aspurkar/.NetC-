//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MathFault", Namespace="http://schemas.datacontract.org/2004/07/WCFDemo1")]
    [System.SerializableAttribute()]
    public partial class MathFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvalidParamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvalidParam {
            get {
                return this.InvalidParamField;
            }
            set {
                if ((object.ReferenceEquals(this.InvalidParamField, value) != true)) {
                    this.InvalidParamField = value;
                    this.RaisePropertyChanged("InvalidParam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexNumber", Namespace="http://schemas.datacontract.org/2004/07/WCFDemo1")]
    [System.SerializableAttribute()]
    public partial class ComplexNumber : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int I {
            get {
                return this.IField;
            }
            set {
                if ((this.IField.Equals(value) != true)) {
                    this.IField = value;
                    this.RaisePropertyChanged("I");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int J {
            get {
                return this.JField;
            }
            set {
                if ((this.JField.Equals(value) != true)) {
                    this.JField = value;
                    this.RaisePropertyChanged("J");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="mydomain.com/mathservice", ConfigurationName="ServiceReference1.ICalculator")]
    public interface ICalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="mydomain.com/mathservice/ICalculator/Add", ReplyAction="mydomain.com/mathservice/ICalculator/AddResponse")]
        int Add(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="mydomain.com/mathservice/ICalculator/Add", ReplyAction="mydomain.com/mathservice/ICalculator/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="mydomain.com/mathservice/ICalculator/Multiply", ReplyAction="mydomain.com/mathservice/ICalculator/MultiplyResponse")]
        int Multiply(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="mydomain.com/mathservice/ICalculator/Multiply", ReplyAction="mydomain.com/mathservice/ICalculator/MultiplyResponse")]
        System.Threading.Tasks.Task<int> MultiplyAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="mydomain.com/mathservice/ICalculator/Divide", ReplyAction="mydomain.com/mathservice/ICalculator/DivideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WcfClient.ServiceReference1.MathFault), Action="mydomain.com/mathservice/ICalculator/DivideMathFaultFault", Name="MathFault", Namespace="http://schemas.datacontract.org/2004/07/WCFDemo1")]
        int Divide(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="mydomain.com/mathservice/ICalculator/Divide", ReplyAction="mydomain.com/mathservice/ICalculator/DivideResponse")]
        System.Threading.Tasks.Task<int> DivideAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="mydomain.com/mathservice/ICalculator/AddComplex", ReplyAction="mydomain.com/mathservice/ICalculator/AddComplexResponse")]
        WcfClient.ServiceReference1.ComplexNumber AddComplex(WcfClient.ServiceReference1.ComplexNumber a, WcfClient.ServiceReference1.ComplexNumber y);
        
        [System.ServiceModel.OperationContractAttribute(Action="mydomain.com/mathservice/ICalculator/AddComplex", ReplyAction="mydomain.com/mathservice/ICalculator/AddComplexResponse")]
        System.Threading.Tasks.Task<WcfClient.ServiceReference1.ComplexNumber> AddComplexAsync(WcfClient.ServiceReference1.ComplexNumber a, WcfClient.ServiceReference1.ComplexNumber y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorChannel : WcfClient.ServiceReference1.ICalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorClient : System.ServiceModel.ClientBase<WcfClient.ServiceReference1.ICalculator>, WcfClient.ServiceReference1.ICalculator {
        
        public CalculatorClient() {
        }
        
        public CalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Add(int x, int y) {
            return base.Channel.Add(x, y);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(int x, int y) {
            return base.Channel.AddAsync(x, y);
        }
        
        public int Multiply(int x, int y) {
            return base.Channel.Multiply(x, y);
        }
        
        public System.Threading.Tasks.Task<int> MultiplyAsync(int x, int y) {
            return base.Channel.MultiplyAsync(x, y);
        }
        
        public int Divide(int x, int y) {
            return base.Channel.Divide(x, y);
        }
        
        public System.Threading.Tasks.Task<int> DivideAsync(int x, int y) {
            return base.Channel.DivideAsync(x, y);
        }
        
        public WcfClient.ServiceReference1.ComplexNumber AddComplex(WcfClient.ServiceReference1.ComplexNumber a, WcfClient.ServiceReference1.ComplexNumber y) {
            return base.Channel.AddComplex(a, y);
        }
        
        public System.Threading.Tasks.Task<WcfClient.ServiceReference1.ComplexNumber> AddComplexAsync(WcfClient.ServiceReference1.ComplexNumber a, WcfClient.ServiceReference1.ComplexNumber y) {
            return base.Channel.AddComplexAsync(a, y);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="mydomain.com/mathservice", ConfigurationName="ServiceReference1.IScientificCalculator")]
    public interface IScientificCalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="mydomain.com/mathservice/IScientificCalculator/Pow", ReplyAction="mydomain.com/mathservice/IScientificCalculator/PowResponse")]
        double Pow(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="mydomain.com/mathservice/IScientificCalculator/Pow", ReplyAction="mydomain.com/mathservice/IScientificCalculator/PowResponse")]
        System.Threading.Tasks.Task<double> PowAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="mydomain.com/mathservice/IScientificCalculator/SqaureRoot", ReplyAction="mydomain.com/mathservice/IScientificCalculator/SqaureRootResponse")]
        double SqaureRoot(int x);
        
        [System.ServiceModel.OperationContractAttribute(Action="mydomain.com/mathservice/IScientificCalculator/SqaureRoot", ReplyAction="mydomain.com/mathservice/IScientificCalculator/SqaureRootResponse")]
        System.Threading.Tasks.Task<double> SqaureRootAsync(int x);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScientificCalculatorChannel : WcfClient.ServiceReference1.IScientificCalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScientificCalculatorClient : System.ServiceModel.ClientBase<WcfClient.ServiceReference1.IScientificCalculator>, WcfClient.ServiceReference1.IScientificCalculator {
        
        public ScientificCalculatorClient() {
        }
        
        public ScientificCalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScientificCalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScientificCalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScientificCalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Pow(int x, int y) {
            return base.Channel.Pow(x, y);
        }
        
        public System.Threading.Tasks.Task<double> PowAsync(int x, int y) {
            return base.Channel.PowAsync(x, y);
        }
        
        public double SqaureRoot(int x) {
            return base.Channel.SqaureRoot(x);
        }
        
        public System.Threading.Tasks.Task<double> SqaureRootAsync(int x) {
            return base.Channel.SqaureRootAsync(x);
        }
    }
}
